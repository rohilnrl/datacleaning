ppois(10, 2)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2*x + e
summary(y)
plot(x, y)
set.seed(1)
sample(1:10, 4)
sample(1:10, 4)
sample(1:10)
sample(1:10)
sample(1:10, replace = T)
system.time(2 + 2)
system.time(2 + 2 == 4)
system.time(for (i in 1:100) {})
system.time(readLines("http://www.google.com"))
set.seed(1)
rpois
rpois(5, 2)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(x, 10)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
LETTERS
sample(LETTERS, 26)
sample(LETTERS)
sample(c(0, 1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0, 1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(x, size = 1, prob = 0.7)
flips2 <- rbinom(flips, size = 1, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
play()
class(mtcars)
dim(mtcars)
str(mtcars)
head(mtcars)
unique(mtcars$carb)
apply(mtcars, unique)
apply(mtcars, 2, unique)
nxt()
?boxplot
mpg ~ cyl
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key = "4c5db6f014e43283752e", secret = "180d60e54e439b5538dd0d99b677201c3ab2d2e1")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
attributes(req)
req.url
class(req)
response(req)
url(req)
status_code(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", key = "4c5db6f014e43283752e", secret = "180d60e54e439b5538dd0d99b677201c3ab2d2e1")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
attributes(req)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos")
content(req)
library(jsonlite)
json <- fromJSON(toJSON(content(req)))
json
class(json)
names(json)
head(json)
head(json$name)
length(json$name)
tail(json$name)
json$name[[1]]
json$name[["datasharing"]]
json$name[json$name == "datasharig"
json$name[json$name == "datasharig"
json$name[json$name == "datasharing"]
names(json)
json$created_at[json$name == "datasharing"]
install.packages("RMySQL")
install.packages("sqldf")
library(sqldf)
handle <- GET("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
handle <- GET("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
handle <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
status_code(handle)
class(content(handle))
content(handle)
library(XML)
handle
class(handle)
names(handle)
install.packages(xml2)
install.packages("xml2")
library(xml2)
class(content(handle))
data <- xmlTreeParse(content(handle))
data <- htmlTreeParse(content(handle))
data
head(html)
head(data)
warnings()
readLines(content(req))
class(data)
handle <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
class(handle)
handle
attributes(handle)
content(handle)
readLines(handle)
data <- readLines(handle)
class(data)
data[1]
data[2]
data[3]
class(data[3])
for (line in data) {
}
for (line in data[5:]) {
data[5:]
data[5:, ]
data[5:end]
data[5:length(data)]
data[5]
data[5][65]
data[5][20]
data <- data[4:length(data)]
data <- read.table(data)
file.create(data, "lmao.dat")
data <- read.table("lmao.dat")
set.seed(13435)
X <- data.frame("var1" = sample(1:5), var2 = sample(6:10))
X <- data.frame("var1" = sample(1:5), "var2" = sample(6:10)
"var3" = sample(11:15))
X <- data.frame("var1" = sample(1:5), "var2" = sample(6:10)
"var3" = sample(11:15))
X <- data.frame("var1" = sample(1:5), "var2" = sample(6:10),
"var3" = sample(11:15))
set.seed(13435)
X <- data.frame("var1" = sample(1:5), "var2" = sample(6:10),
"var3" = sample(11:15))
X <- X[sample(1:5), ]
X$var2[c(1, 3)] = NA
X
X[, 1]
X[, "var1"]
X[1:2, "var2"]
X[which(X$var2 > 8)]
X[which(X$var2 > 8), ]
x
X
sort(X$var1)
X
sort(X$var2, decreasing = T, na.last = T)
X[order(X$var1), ]
cbind(X, rnorm(5))
X
rbind(X, c(1, 2, 3))
rbind(X, c(1, 2, 3, 4))
rbind(X, c(1, 2))
row.names(X)
row.names(X) <- c(2:6)
X
row.names(X) <- c(T)
row.names(X) <- T
row.names(X) <- c(rep(TRUE, 5))
head(x, 2)
head(X, 2)
tail(X, 2)
summary(x)
summary(X)
str(X)
quantile(X)
quantile(X, na.rm = T)
quantile(X, na.rm = T, probs = c(.9))
table(X[1])
table(X[2])
table(X["var1"])
table(X, useNA = "ifany")
table(X$var1, X$var2)
X
X
X$var2 <- c(2, 1, 2, 5, 4)
X
table(X$var1, X$var2)
sum(is.na(X$var2))
colSums()
colSums(X)
tapply(X$var1, X$var2, mean)
class(X$var2)
library(reshape2)
load(mtcars)
data(mtcars)
mtcars$carname <- rownames(mtcars)
mtcars
carMelt <- melt(mtcars, id = c("carname", "gear", "cyl"), measure.vars = c("mpg", "hp"))
head(carMelt, 3)
carMelt[33]
carMelt[33, ]
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable, mean)
cylData
cylData <- dcast(carMelt, cyl ~ variable, round(mean))
cylData <- dcast(carMelt, cyl ~ variable, func(x) {round(mean(x))})
cylData <- dcast(carMelt, cyl ~ variable, func(x) {round(mean(x))})
cylData <- dcast(carMelt, cyl ~ variable, function(x) {round(mean(x))})
cylData
for (i in cylData) {print(i)}
for (i in cylData) {print(i[1])}
cylData[, 2:3]
library(dplyr)
install.packages("dplyr")
library(dplyr)
data(iris)
dim(iris)
str(iris)
names(iris)
head(select(iris, Sepal.Length:Petal.Width))
head(select(iris, -(Sepal.Length:Petal.Width)))
iris[iris$Sepal.Width > 3.2, ]
iris[iris$Sepal.Width > 3.2, ]
iris
head(iris[iris$Sepal.Width > 3.2, ])
head(filter(iris, Sepal.Width > 3.2))
iris <- arrange(iris, Petal.Length)
head(iris)
iris <- iris[order(iris$Petal.Length), ]
head(iris)
head(iris[, 1:4][, order(iris[1, ])])
class(names(iris))
names(iris)
for (name in names(iris)) {
new_name <-
}
for (name in names(iris)) {
new_name <- name
new_name[6] <- " "
names(iris)[match(names(iris), name)] <- new_name
}
iris
head(iris)
library(swirl)
swirl()
quit(0)
setwd("~/Data Science/datasciencecoursera")
source("r_analysis.R")
dataset
head(dataset)
dim(dataset)
library(dplyr)
dataset <- tbl_df(dataset)
dataset
features <- fread(file.path(path, "features.txt"))
dim(features)
class(features)
features <- tbl_df(features)
class(features)
features
names(features)
setnames(features, "V1", "index")
features
setnames(features, names(features), c("index", "feature"))
features
features$feature
grepl("mean", features$feature)
features <- features[grepl("mean", features$feature), ]
features
features <- fread(file.path(path, "features.txt"))
features <- tbl_df(features)
setnames(features, names(features), c("index", "feature"))
features
features <- features[grepl("mean|std", features$feature), ]
features
key(dataset)
dataset$subject_id
dataset$activity_id
paste("V", 56)
paste("V", 56, sep = "")
mutate(features, index = paste("V", index, sep = ""))
features <- mutate(features, index = paste("V", index, sep = ""))
features
head(features)
features$variable
features$index
select(features, c("indes"))
select(features, c("index"))
select(dataset, features$index)
key(dataset)
class(key(dataset))
c(key(dataset), features$index)
select(dataset, c(key(dataset), features$index))
source("r_analysis.R")
source("r_analysis.R")
dataset
activity_labels <- fread(file.path(path, "activity_labels.txt"))
activity_labels
dataset <- merge(dataset, activity_labels, by="V1", all.x = TRUE)
dataset
dataset <- tbl_df(dataset)
dataset
source('r_analysis.R')
dataset
activity_labels
setnames(activity_labels, names(activity_labels), c("activity_id", "activity"))
activity_labels
dataset <- merge(dataset, activity_labels, by="V1", all.x = TRUE)
dataset <- merge(dataset, activity_labels, by = "activity_id", all.x = TRUE)
dataset <- tbl_df(dataset)
dataset
select(dataset, activity_id, subject_id, activity, V1:V552)
dataset <- select(dataset, activity_id, subject_id, activity, V1:V552)
source("r_analysis.R")
dataset
dataset <- select(dataset, -activity_id)
dataset
features
dataset[3:554]
dataset[3:length(dataset)]
setnames(dataset[3:length(dataset)], names(dataset[3:length(dataset)]), features$feature)
dataset
setnames(dataset, names(dataset[3:length(dataset)]), features$feature)
dataset
v
setkey(dataset, subject_id, activity)
data.table(dataset)
setkey(data.table(dataset), subject_id, activity)
dt <- data.table(melt(dt, key(dt), variable.name="featureCode"))
View(features)
dt <- data.table(melt(dataset, key(dataset), variable.name="variable"))
dt
key(dataset)
setkey(dataset, subject_id, activity)
dataset <- data.table(dataset)
setkey(dataset, subject_id, activity)
dataset <- data.table(melt(dataset, key(dataset), variable.name="feature"))
dataset
dataset <- tbl_df(dataset)
dataset
source('r_analysis.R')
source('r_analysis.R')
dataset
names(dataset)
features
library(stringr)
strsplit("tBodyAcc-mean()-X", "-")
unlist(strsplit("tBodyAcc-mean()-X", "-"))
unlist(strsplit("tBodyAcc-mean()-X", "-"))[2]
sub("tBodyAcc-mean()-X", "-", "_")
sub("-", "_", "tBodyAcc-mean()-X")
gsub("-", "_", "tBodyAcc-mean()-X")
f() <- 3
gsub("\\(", "", "tBodyAcc-mean()-X")
gsub("\\(", "", "tBodyAcc-mean()-X")
gsub("\\(", "", features$feature)
feature_names <- gsub("\\(", "", features$feature)
feature_names <- gsub("\\)", "", features$feature)
feature_names <- gsub("-", "_", feature_names)
feature_names <- gsub("\\)", "", feature_names)
head(feature_names)
feature_names <- gsub("\\(", "", feature_names)
head(feature_names)
length(feature_names)
source("r_analysis.R")
dataset
activity_labels
activity_labels$activity
tolower(activity_labels$activity)
activity_labels$activity <- tolower(activity_labels$activity)
activity_labels
source("r_analysis.R")
activity_labels <- fread(file.path(path, "activity_labels.txt"))
activity_labelsi
activity_labels
activity_labels$activity <- tolower(activity_labels$activity)
activity_labels
activity_labels <- fread(file.path(path, "activity_labels.txt"))
activity_labels$V2 <- tolower(activity_labels$V2)
activity_labels
source("r_analysis.R")
dataset
tidy_data <- order_by(dataset, activity, subject_id)
tidy_data <- order_by(dataset, c(activity, subject_id))
tidy_data <- group_by(dataset, activity, subject_id)
tidy_data
?summarise
?summarize
summarize(tidy_data, mean())
summarise(tidy_data, mean)
summarise(tidy_data, mean())
summarise(tidy_data, average = mean())
summarise_all(tidy_data, funs(mean))
source('r_analysis.R')
head(tidy_data)
tail(tidy_data)
write.table(tidy_data, file = "tidydata.txt", row.names = FALSE)
source("run_analysis.R")
source("run_analysis.R")
setwd("~/Data Science/datacleaning")
dataset
tidy_data
require(tidyr)
?spread
dataset
dt <- data.table(dataset)
dt <- data.table(melt(dt, key(dt), variable.name = "featureCode"))
key(dt)
setkey(dt, subject_id, activity)
dt <- data.table(dataset)
setkey(dt, subject_id, activity)
dt <- data.table(melt(dt, key(dt), variable.name = "featureCode"))
head(dt)
dt <- tbl_df(dt)
dt
dt <- data.table(dt)
dt$feature <- factor(dt$featureCode)
dt
head(dt)
n <- 2
y <- matrix(seq(1, n), nrow = n)
y
grepthis <- function(regex) {
grepl(regex, dt$feature)
}
x <- matrix(c(grepthis("^t"), grepthis("^f")), ncol = nrow(y))
dt$featDomain <- factor(x %*% y, labels = c("Time", "Freq"))
x
head(dt)
tail(dt)
x <- matrix(c(grepthis("Acc"), grepthis("Gyro")), ncol = nrow(y))
dt$featInstrument <- factor(x %*% y, labels = c("Accelerometer", "Gyroscope"))
x <- matrix(c(grepthis("BodyAcc"), grepthis("GravityAcc")), ncol = nrow(y))
dt$featAcceleration <- factor(x %*% y, labels = c(NA, "Body", "Gravity"))
x <- matrix(c(grepthis("mean()"), grepthis("std()")), ncol = nrow(y))
dt$featVariable <- factor(x %*% y, labels = c("Mean", "SD"))
dt$featVariable <- factor(x %*% y, labels = c("Mean", "SD"))
head(dt)
y
x
dim(dt)
dt$feature
gepl("^t", dt$feature)
grepl("^t", dt$feature)
x
dim(x)
dim(y)
y
dt$feature
head(dt)
source("run_analysis.R")
dt <- tbl_df(dt)
dt
tidy_data
dt
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
